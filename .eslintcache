[{"C:\\Users\\wafa\\react-app\\weather\\src\\index.js":"1","C:\\Users\\wafa\\react-app\\weather\\src\\App.js":"2","C:\\Users\\wafa\\react-app\\weather\\src\\reportWebVitals.js":"3","C:\\Users\\wafa\\react-app\\weather\\src\\components\\Weather.js":"4","C:\\Users\\wafa\\react-app\\weather\\src\\components\\Wrapper.js":"5","C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledWeather.js":"6","C:\\Users\\wafa\\react-app\\weather\\src\\utils\\fetchHelpers.js":"7","C:\\Users\\wafa\\react-app\\weather\\src\\components\\Geolocation.js":"8","C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledWrapper.js":"9","C:\\Users\\wafa\\react-app\\weather\\src\\components\\SearchBox.js":"10","C:\\Users\\wafa\\react-app\\weather\\src\\components\\WeatherDisplay.js":"11","C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledGeolocation.js":"12","C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledSearchBox.js":"13","C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledWeatherDisplay.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":184,"mtime":1611931812102,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2218,"mtime":1611930424305,"results":"19","hashOfConfig":"16"},{"size":550,"mtime":1611930487371,"results":"20","hashOfConfig":"16"},{"size":566,"mtime":1611930659265,"results":"21","hashOfConfig":"16"},{"size":1891,"mtime":1611930772553,"results":"22","hashOfConfig":"16"},{"size":430,"mtime":1611930378661,"results":"23","hashOfConfig":"16"},{"size":335,"mtime":1611930708298,"results":"24","hashOfConfig":"16"},{"size":406,"mtime":1611930398993,"results":"25","hashOfConfig":"16"},{"size":546,"mtime":1611930461153,"results":"26","hashOfConfig":"16"},{"size":276,"mtime":1611930604735,"results":"27","hashOfConfig":"16"},{"size":670,"mtime":1611930622696,"results":"28","hashOfConfig":"16"},{"size":608,"mtime":1611930683949,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"gd0kd2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\wafa\\react-app\\weather\\src\\index.js",[],["61","62"],"C:\\Users\\wafa\\react-app\\weather\\src\\App.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\reportWebVitals.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\Weather.js",["63"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Wrapper from './Wrapper';\r\n\r\nimport { getWeather } from '../utils/fetchHelpers';\r\n\r\nimport StyledWeather from './styles/StyledWeather';\r\n\r\nconst Weather = () => {\r\n  const [inputLocation, setInputLocation] = useState('Embu');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const [location, setLocation] = useState({\r\n    city: '',\r\n    state: '',\r\n    country: ''\r\n  });\r\n  const [weather, setWeather] = useState({\r\n    currentTemp: 0,\r\n    weatherMain: '',\r\n    tempMax: 0,\r\n    tempMin: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData('SÃ£o Paulo').then(([newWeather, placeName]) => {\r\n      setWeather(newWeather);\r\n      setLocation(placeName);\r\n    });\r\n  }, []);\r\n\r\n  async function fetchData(newLocation) {\r\n    const now = new Date();\r\n    setCurrentDate(dateBuilder(now));\r\n    const response = await getWeather(newLocation);\r\n    return response;\r\n  }\r\n\r\n  const setBackground = () => {\r\n    const now = new Date();\r\n    const hour = now.getHours();\r\n    if (hour <= 7 || hour > 18) {\r\n      return 'blue';\r\n    }\r\n    if (hour > 7 && hour <= 15) {\r\n      return 'green';\r\n    }\r\n    return 'orange';\r\n  }\r\n\r\n  const dateBuilder = (d) => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    const day = days[d.getDay()];\r\n    const date = d.getDate();\r\n    const month = months[d.getMonth()];\r\n    const year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  }\r\n\r\n  const handleInputLocation = (e) => {\r\n    e.preventDefault();\r\n    setInputLocation(e.target.value);\r\n  }\r\n\r\n  const getForecast = (e) => {\r\n    e.preventDefault();\r\n    fetchData(inputLocation).then(([newWeather, placeName]) => {\r\n      setWeather(newWeather);\r\n      setLocation(placeName);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledWeather bgImage={setBackground()}>\r\n      <Wrapper states={{ location, currentDate, weather }} handleInput={handleInputLocation} handleSubmit={getForecast} />\r\n    </StyledWeather>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","C:\\Users\\wafa\\react-app\\weather\\src\\components\\Wrapper.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledWeather.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\utils\\fetchHelpers.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\Geolocation.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledWrapper.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\SearchBox.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\WeatherDisplay.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledGeolocation.js",[],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledSearchBox.js",[],["64","65"],"C:\\Users\\wafa\\react-app\\weather\\src\\components\\styles\\StyledWeatherDisplay.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":29,"column":6,"nodeType":"72","endLine":29,"endColumn":8,"suggestions":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["78"],["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [fetchData]",{"range":"81","text":"82"},[735,737],"[fetchData]"]